TODO
====
webapp2 is considered feature complete and well tested, but if you think
something is missing or is not working well, please describe it in our issue
tracker:

    http://code.google.com/p/webapp-improved/issues/list

We'd love to know if you found a bug or if something can be improved. We are
also interested in ideas for new webapp2_extras modules and more tests and
documentation.

Thanks!

Request.blank()
---------------
WebOb >= 1.0 supports extra parameters in Request.blank() that makes it easier
to test POST data. We could support it with this::

    @classmethod
    def blank(cls, path, environ=None, base_url=None,
              headers=None, POST=None, **kw):
        # Extra parameters compatible with WebOb >= 1.0: POST and **kw.
        if POST is not None:
            data = POST
            from cStringIO import StringIO
            environ = environ or {}
            environ['REQUEST_METHOD'] = 'POST'
            if hasattr(data, 'items'):
                data = data.items()
            if not isinstance(data, str):
                data = urllib.urlencode(data)
            environ['wsgi.input'] = StringIO(data)
            environ['webob.is_body_seekable'] = True
            environ['CONTENT_LENGTH'] = str(len(data))
            environ['CONTENT_TYPE'] = 'application/x-www-form-urlencoded'

        base = webob.Request.blank(path, environ=environ,
                                   base_url=base_url, headers=headers)
        obj = cls(base.environ, **kw)
        obj.headers.update(base.headers)
        return obj

webapp
------
Here is a list of updates for webapp that could be gradually implemented in
future SDK releases, to make webapp more close to webapp2:

- Include a updated version of webob in the SDK, available through
  use_library(). As of June 15, 2011 the latest version is 1.0.7.
  Issues: #2788, #170 and #719 (no access to parsed body parameters with PUT
  request in webapp)

- Use webob.Response
  Issues: #200, #5030

- Use webob.exc for status code exceptions.
  Issues:

- Make RequestHandler dispatch the requested method, using a class method.
  Issues: #468

- Better URI Routing.
  Issues: #444 (routing based on hostnames), #843 (limitations to build URIs),
  #2398 (routing based on the URL scheme), #2636 and #5128 (unquote URL paths
  before matching them)

More issues
-----------
http://code.google.com/p/googleappengine/issues/list?can=2&q=webob
http://code.google.com/p/googleappengine/issues/list?can=2&q=component%3DFrameworks
